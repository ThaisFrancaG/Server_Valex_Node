import axios from "axios";
import { Request, Response } from "express";
import * as employeeInfo from "../repositories/employeeRepository"

export async function createCard(employeeId: number, cardType: string) {
  console.log("checking values" + employeeId + " " + cardType);
  //with thatm I do have the information needed to make the verifications that will require connection to the database

  //checkIf the card type if valid. There is probably a better way to do this, but i will use a switch case
const validCardType = checkCardType(cardType);
console.log("Check de validade"+validCardType);

  //check if employee id is valid. Also, take the employee information

  let employeeData = await employeeInfo.findById(employeeId);

console.log("return from employeeData")
console.log(employeeData)


  //check the types of card that the employee has. Check if the employee already has this card type



}

export async function checkCardType(){
    console.log("Entering switch cause")
  switch(cardType){
      case "groceries": 
      "restaurant": 
      "transport":
       "education":
        "health":
        console.log("Valid card Type");
        break;
//em tese, se o tipo for válido, tá tudo certo e vai só dar o break, sem nada mais. Contudo, se tiver algo de errado, vai cair no default. 
        default:
            console.log("invalid Card Type")
            //o throw é para aparecer como mensagem né?
            // mas ai onde que esse throw será capturado?
           // throw "tipo inválido"
           //vou deixar o throw pra depois
return res.sendStatus(401)

  }
}
export async function getEmployee(employeeId) {}
